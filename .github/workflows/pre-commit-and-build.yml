name: Python Application CI/CD

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: read

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Run pre-commit
        run: pre-commit run --all-files

  build-dev:
    needs: pre-commit
    if: github.ref == 'refs/heads/master'
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Build executable
        run: |
          poetry install
          poetry run python build.py

      - name: Get current datetime
        id: datetime
        run: |
          echo "datetime=$(Get-Date -Format 'yyyy-MM-dd-HH-mm')" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Create pre-release
        uses: softprops/action-gh-release@v1
        with:
          files: output/utils.exe
          prerelease: true
          name: "Development Build ${{ steps.datetime.outputs.datetime }}"
          tag_name: "dev-${{ steps.datetime.outputs.datetime }}-${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-build:
    needs: pre-commit
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Build executable
        run: |
          poetry install
          poetry run python build.py

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: output/utils.exe
          name: "Release ${{ github.ref_name }}"
          body: "Release ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
